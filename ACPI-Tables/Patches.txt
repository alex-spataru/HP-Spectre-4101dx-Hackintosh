#------------------------------------------------
# Windows 7 Patch
#------------------------------------------------

into_all method code_regex If\s+\([\\]?_OSI\s+\(\"Windows\s2009\"\)\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2009"))) end;

#------------------------------------------------
# Windows 8 Patch
#------------------------------------------------

into_all method code_regex If\s+\([\\]?_OSI\s+\(\"Windows\s2012\"\)\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2012"))) end;

#------------------------------------------------
# Windows 8.1 Patch
#------------------------------------------------

into_all method code_regex If\s+\([\\]?_OSI\s+\(\"Windows\s2013\"\)\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2013"))) end;

#------------------------------------------------
# Windows 10 Patch
#------------------------------------------------

into_all method code_regex If\s+\([\\]?_OSI\s+\(\"Windows\s2015\"\)\) replace_matched begin If(LOr(_OSI("Darwin"),_OSI("Windows 2015"))) end;

#------------------------------------------------
# Ensure that GPI0 controller is enumerated
#------------------------------------------------

into method label _STA parent_label GPI0 replace_content begin
Return (0x0F)
end;

#------------------------------------------------
# HPET fix
#------------------------------------------------

into method label _STA parent_hid PNP0103 remove_entry;
into device name_hid PNP0103 code_regex Name\s\(_STA\,\s+0x0F\) remove_matched;
into device name_hid PNP0103 insert
begin
Name (_STA, 0x0F)\n
end;
into method label _CRS parent_hid PNP0103 remove_entry;
into device name_hid PNP0103 insert
begin
Method (_CRS, 0, NotSerialized)\n
{\n
    Return (BUF0)\n
}\n
end;

#------------------------------------------------
# IRQ fix
#------------------------------------------------

into device name_hid PNP0000 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0100 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0B00 code_regex IRQNoFlags\s\(\)\n\s+\{(\d+)\} remove_matched;
into device name_hid PNP0103 code_regex IRQNoFlags\s\(\)\n\s+\{.*\} removeall_matched;
into device name_hid PNP0103 code_regex Name\s\(([^,]+),\sResourceTemplate\s\(\).*\n\s+\{((?:.|\n)*)\}\) replace_matched
begin
Name (%1, ResourceTemplate()\n
{\n
    IRQNoFlags() { 0, 8, 11, 15 }\n
%2
})\n
end;

#------------------------------------------------
# RTC fix
#------------------------------------------------

into device name_hid PNP0B00 code_regex (IO\s\((?:\s*[^,]+,\s*(?:\/\/\s.*)?\s*\n)+\s*)(\dx\d+)(,\s*(?:\/\/\s.*)?\s*\n\s*\)) replace_matched begin %10x02%3 end;

#------------------------------------------------
# SMBUS fix
#------------------------------------------------

into device label BUS0 parent_adr 0x001F0003 remove_entry;
into device name_adr 0x001F0003 insert
begin
Device (BUS0)\n
{\n
    Name (_CID, "smbus")\n
    Name (_ADR, Zero)\n
    Device (DVL0)\n
    {\n
        Name (_ADR, 0x57)\n
        Name (_CID, "diagsvault")\n
        Method (_DSM, 4, NotSerialized)\n
        {\n
            If (LEqual (Arg2, Zero)) { Return (Buffer() { 0x03 } ) }\n
            Return (Package() { "address", 0x57 })\n
        }\n
    }\n
}\n
end;

#------------------------------------------------
# Enable Brightness down key
#------------------------------------------------

into method label _Q10 replace_content begin
Notify(\_SB.PCI0.LPCB.PS2K, 0x0205)\n 
Notify(\_SB.PCI0.LPCB.PS2K, 0x0285)\n 
end; 

#------------------------------------------------
# Enable Brightness up key
#------------------------------------------------

into method label _Q11 replace_content begin
Notify(\_SB.PCI0.LPCB.PS2K, 0x0206)\n 
Notify(\_SB.PCI0.LPCB.PS2K, 0x0286)\n 
end;

#------------------------------------------------
# Battery fix
#------------------------------------------------

into definitionblock code_regex External\s+\(\\TNOT\) remove_matched;
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }\n
end;

#                        SMD0,   256, 
#                        BFCC,   16, 
#                        MCUR,   16, f
#                        MBRM,   16, 
#                        MBCV,   16, 
#                        SMW0,   16
#                        FLD1,   128
#                        FLD2,   192
#                        FLD3,   256

# deal with 256-bit SMD0
into device label EC0 code_regex SMD0,\s+256 replace_matched 
begin
//SMD0, 256,\n
SD00,8,SD01,8,SD02,8,SD03,8,\n
SD04,8,SD05,8,SD06,8,SD07,8,\n
SD08,8,SD09,8,SD0A,8,SD0B,8,\n
SD0C,8,SD0D,8,SD0E,8,SD0F,8,\n
SD10,8,SD11,8,SD12,8,SD13,8,\n
SD14,8,SD15,8,SD16,8,SD17,8,\n
SD18,8,SD19,8,SD1A,8,SD1B,8,\n
SD1C,8,SD1D,8,SD1E,8,SD1F,8
end;

# 16-bit EC registers
into device label EC0 code_regex MFCA,\s+16 replace_matched begin FCA0,8,FCA1,8 end;
into device label EC0 code_regex BFCC,\s+16 replace_matched begin FCC0,8,FCC1,8 end;
into device label EC0 code_regex MCUR,\s+16 replace_matched begin CUR0,8,CUR1,8 end;
into device label EC0 code_regex MBRM,\s+16 replace_matched begin BRM0,8,BRM1,8 end;
into device label EC0 code_regex MBCV,\s+16 replace_matched begin BCV0,8,BCV1,8 end;
into device label EC0 code_regex SMW0,\s+16 replace_matched begin SMWX,8,SMWY,8 end;
into device label EC0 code_regex BADC,\s+16 replace_matched begin ADC0,8,ADC1,8 end;

# deal with 256-bit FLD3
into device label EC0 code_regex FLD3,\s+256 replace_matched 
begin
//FLD3, 256,\n
F300,8,F301,8,F302,8,F303,8,\n
F304,8,F305,8,F306,8,F307,8,\n
F308,8,F309,8,F30A,8,F30B,8,\n
F30C,8,F30D,8,F30E,8,F30F,8,\n
F310,8,F311,8,F312,8,F313,8,\n
F314,8,F315,8,F316,8,F317,8,\n
F318,8,F319,8,F31A,8,F31B,8,\n
F31C,8,F31D,8,F31E,8,F31F,8
end;

# 16-bit method access
into method label UPBI code_regex \(\^\^PCI0\.LPCB\.EC0\.MFCA, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.FCA0,^^PCI0.LPCB.EC0.FCA1), end;
into method label UPBI code_regex \(\^\^PCI0\.LPCB\.EC0\.BFCC, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.FCC0,^^PCI0.LPCB.EC0.FCC1), end;
into method label UPBI code_regex \(\^\^PCI0\.LPCB\.EC0\.BADC, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.ADC0,^^PCI0.LPCB.EC0.ADC1), end;
into method label UPBS code_regex \(\^\^PCI0\.LPCB\.EC0\.MCUR, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.CUR0,^^PCI0.LPCB.EC0.CUR1), end;
into method label UPBS code_regex \(\^\^PCI0\.LPCB\.EC0\.MBRM, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.BRM0,^^PCI0.LPCB.EC0.BRM1), end;
into method label UPBC code_regex \(\^\^PCI0\.LPCB\.EC0\.MBRM, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.BRM0,^^PCI0.LPCB.EC0.BRM1), end;
into method label UPBS code_regex \(\^\^PCI0\.LPCB\.EC0\.MBCV, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.BCV0,^^PCI0.LPCB.EC0.BCV1), end;
into method label CLRI code_regex \(\^\^LPCB\.EC0\.MBRM, replaceall_matched begin (B1B2(^^LPCB.EC0.BRM0,^^LPCB.EC0.BRM1), end;
into method label GBIF code_regex \(\^\^PCI0\.LPCB\.EC0\.BFCC, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.FCC0,^^PCI0.LPCB.EC0.FCC1), end;
into method label UPBC code_regex \^\^PCI0\.LPCB\.EC0\.BFCC, replaceall_matched begin B1B2(^^PCI0.LPCB.EC0.FCC0,^^PCI0.LPCB.EC0.FCC1), end;
into method label GBCO code_regex \(\^\^PCI0\.LPCB\.EC0\.MCUR, replaceall_matched begin (B1B2(^^PCI0.LPCB.EC0.CUR0,^^PCI0.LPCB.EC0.CUR1), end;

# deal with SMD0
into device label EC0 insert
begin
Method (RSMD, 0, Serialized)\n
{\n
    Name (TEMP, Buffer(0x20) { })\n
    Store (SD00, Index(TEMP, 0x00))\n
    Store (SD01, Index(TEMP, 0x01))\n
    Store (SD02, Index(TEMP, 0x02))\n
    Store (SD03, Index(TEMP, 0x03))\n
    Store (SD04, Index(TEMP, 0x04))\n
    Store (SD05, Index(TEMP, 0x05))\n
    Store (SD06, Index(TEMP, 0x06))\n
    Store (SD07, Index(TEMP, 0x07))\n
    Store (SD08, Index(TEMP, 0x08))\n
    Store (SD09, Index(TEMP, 0x09))\n
    Store (SD0A, Index(TEMP, 0x0A))\n
    Store (SD0B, Index(TEMP, 0x0B))\n
    Store (SD0C, Index(TEMP, 0x0C))\n
    Store (SD0D, Index(TEMP, 0x0D))\n
    Store (SD0E, Index(TEMP, 0x0E))\n
    Store (SD0F, Index(TEMP, 0x0F))\n
    Store (SD10, Index(TEMP, 0x10))\n
    Store (SD11, Index(TEMP, 0x11))\n
    Store (SD12, Index(TEMP, 0x12))\n
    Store (SD13, Index(TEMP, 0x13))\n
    Store (SD14, Index(TEMP, 0x14))\n
    Store (SD15, Index(TEMP, 0x15))\n
    Store (SD16, Index(TEMP, 0x16))\n
    Store (SD17, Index(TEMP, 0x17))\n
    Store (SD18, Index(TEMP, 0x18))\n
    Store (SD19, Index(TEMP, 0x19))\n
    Store (SD1A, Index(TEMP, 0x1A))\n
    Store (SD1B, Index(TEMP, 0x1B))\n
    Store (SD1C, Index(TEMP, 0x1C))\n
    Store (SD1D, Index(TEMP, 0x1D))\n
    Store (SD1E, Index(TEMP, 0x1E))\n
    Store (SD1F, Index(TEMP, 0x1F))\n
    Return (TEMP)\n
}\n
end;

into device label EC0 insert
begin
Method (WSMD, 1, Serialized)\n
{\n
    Name (TEMP, Buffer(0x20) { })\n
    Store (Arg0, TEMP)\n
    Store (DerefOf(Index(TEMP, 0x00)), SD00)\n
    Store (DerefOf(Index(TEMP, 0x01)), SD01)\n
    Store (DerefOf(Index(TEMP, 0x02)), SD02)\n
    Store (DerefOf(Index(TEMP, 0x03)), SD03)\n
    Store (DerefOf(Index(TEMP, 0x04)), SD04)\n
    Store (DerefOf(Index(TEMP, 0x05)), SD05)\n
    Store (DerefOf(Index(TEMP, 0x06)), SD06)\n
    Store (DerefOf(Index(TEMP, 0x07)), SD07)\n
    Store (DerefOf(Index(TEMP, 0x08)), SD08)\n
    Store (DerefOf(Index(TEMP, 0x09)), SD09)\n
    Store (DerefOf(Index(TEMP, 0x0A)), SD0A)\n
    Store (DerefOf(Index(TEMP, 0x0B)), SD0B)\n
    Store (DerefOf(Index(TEMP, 0x0C)), SD0C)\n
    Store (DerefOf(Index(TEMP, 0x0D)), SD0D)\n
    Store (DerefOf(Index(TEMP, 0x0E)), SD0E)\n
    Store (DerefOf(Index(TEMP, 0x0F)), SD0F)\n
    Store (DerefOf(Index(TEMP, 0x10)), SD10)\n
    Store (DerefOf(Index(TEMP, 0x11)), SD11)\n
    Store (DerefOf(Index(TEMP, 0x12)), SD12)\n
    Store (DerefOf(Index(TEMP, 0x13)), SD13)\n
    Store (DerefOf(Index(TEMP, 0x14)), SD14)\n
    Store (DerefOf(Index(TEMP, 0x15)), SD15)\n
    Store (DerefOf(Index(TEMP, 0x16)), SD16)\n
    Store (DerefOf(Index(TEMP, 0x17)), SD17)\n
    Store (DerefOf(Index(TEMP, 0x18)), SD18)\n
    Store (DerefOf(Index(TEMP, 0x19)), SD19)\n
    Store (DerefOf(Index(TEMP, 0x1A)), SD1A)\n
    Store (DerefOf(Index(TEMP, 0x1B)), SD1B)\n
    Store (DerefOf(Index(TEMP, 0x1C)), SD1C)\n
    Store (DerefOf(Index(TEMP, 0x1D)), SD1D)\n
    Store (DerefOf(Index(TEMP, 0x1E)), SD1E)\n
    Store (DerefOf(Index(TEMP, 0x1F)), SD1F)\n
}\n
end;

into method label SMRD code_regex \(SMW0 replaceall_matched begin (B1B2(SMWX,SMWY) end;
into method label SMWR code_regex Store\s+\((.*),\s+SMW0\) replaceall_matched
begin
// Store(%1, SMW0)\n
Store(%1, SMWX) Store(ShiftRight(%1, 8), SMWY) 
end;
into method label SMRD code_regex \(SMD0, replaceall_matched begin (RSMD(), end;
into method label SMWR code_regex Store\s+\((.*),\s+SMD0\) replaceall_matched begin WSMD(%1) end;

# deal with FLD3
into device label EC0 insert
begin
Method (RFL3, 0, Serialized)\n
{\n
    Name (TEMP, Buffer(0x20) { })\n
    Store (F300, Index(TEMP, 0x00))\n
    Store (F301, Index(TEMP, 0x01))\n
    Store (F302, Index(TEMP, 0x02))\n
    Store (F303, Index(TEMP, 0x03))\n
    Store (F304, Index(TEMP, 0x04))\n
    Store (F305, Index(TEMP, 0x05))\n
    Store (F306, Index(TEMP, 0x06))\n
    Store (F307, Index(TEMP, 0x07))\n
    Store (F308, Index(TEMP, 0x08))\n
    Store (F309, Index(TEMP, 0x09))\n
    Store (F30A, Index(TEMP, 0x0A))\n
    Store (F30B, Index(TEMP, 0x0B))\n
    Store (F30C, Index(TEMP, 0x0C))\n
    Store (F30D, Index(TEMP, 0x0D))\n
    Store (F30E, Index(TEMP, 0x0E))\n
    Store (F30F, Index(TEMP, 0x0F))\n
    Store (F310, Index(TEMP, 0x10))\n
    Store (F311, Index(TEMP, 0x11))\n
    Store (F312, Index(TEMP, 0x12))\n
    Store (F313, Index(TEMP, 0x13))\n
    Store (F314, Index(TEMP, 0x14))\n
    Store (F315, Index(TEMP, 0x15))\n
    Store (F316, Index(TEMP, 0x16))\n
    Store (F317, Index(TEMP, 0x17))\n
    Store (F318, Index(TEMP, 0x18))\n
    Store (F319, Index(TEMP, 0x19))\n
    Store (F31A, Index(TEMP, 0x1A))\n
    Store (F31B, Index(TEMP, 0x1B))\n
    Store (F31C, Index(TEMP, 0x1C))\n
    Store (F31D, Index(TEMP, 0x1D))\n
    Store (F31E, Index(TEMP, 0x1E))\n
    Store (F31F, Index(TEMP, 0x1F))\n
    Return (TEMP)\n
}\n
end;

into method label SMRD code_regex \(FLD([3]), replaceall_matched begin (RFL%1(), end;


